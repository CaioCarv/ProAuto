@model AssociadoModel
@{
    ViewData["Title"] = "Criar Associado";
}

<div class="text-center">
    <h1 class="display-4">Cadastra Associado</h1>

</div>

<form asp-controller="Associados" asp-action="Criar" method="post">
    <div class="form-group">
        <label for="nome">Nome</label>
        <input type="text" asp-for="Nome" class="form-control" placeholder="Entre com o Nome">
        @Html.ValidationMessageFor(x => x.Nome)

    </div>

    <div class="form-group">
        <label for="cpf">CPF</label>
        <input type="text" asp-for="CPF" class="form-control" id="cpf" placeholder="Entre com o CPF"
               oninput="this.value = this.value.replace(/[^0-9]/g, '').toUpperCase()">
        <span id="cpf-validation-msg" class="text-danger"></span>
        @Html.ValidationMessageFor(x => x.CPF)
    </div>

    <div class="form-group">
        <label for="placa">Placa</label>
        <input type="text" asp-for="Placa" class="form-control" id="placa" placeholder="Entre com a Placa"
               oninput="this.value = this.value.replace.toUpperCase()">
        @Html.ValidationMessageFor(x => x.Placa)
    </div>


    <div class="form-group">
        <label for="endereco">Endereço</label>
        <input type="text" asp-for="Endereco" class="form-control" placeholder="Entre com o Endereço">
        @Html.ValidationMessageFor(x => x.Endereco)
    </div>

    <div class="form-group">
        <label for="telefone">Telefone</label>
        <input type="text" asp-for="Telefone" class="form-control" id="telefone" placeholder="Entre com o Telefone"
               oninput="this.value = this.value.replace(/\D/g, '')">
        @Html.ValidationMessageFor(x => x.Telefone)
    </div>

    <button type="submit" class="btn btn-primary w-100 mt-2 mb-2">Alterar</button>
    <a class="btn btn-secondary btn-custom w-100 mt-2" asp-controller="Associados" asp-action="Index" role="button">Voltar</a>

</form>